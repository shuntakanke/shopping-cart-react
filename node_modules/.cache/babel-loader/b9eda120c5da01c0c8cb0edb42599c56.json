{"ast":null,"code":"import _objectSpread from\"/Users/shunta/Desktop/portfolio/react-shopping-cart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ADD_TO_CART,REMOVE_FROM_CART}from\"../types\";export var addToCart=function addToCart(product){return function(dispatch,getState){var cartItems=getState().cart.cartItems.slice();var alreadyExists=false;cartItems.forEach(function(x){if(x._id===product._id){alreadyExists=true;x.count++;}});if(!alreadyExists){cartItems.push(_objectSpread(_objectSpread({},product),{},{count:1}));}dispatch({type:ADD_TO_CART,payload:{cartItems:cartItems}});localStorage.setItem(\"cartItems\",JSON.stringify(cartItems));};};export var removeFromCart=function removeFromCart(product){return function(dispatch,getState){var cartItems=getState().cart.cartItems.slice().filter(function(x){return x._id!==product._id;});dispatch({type:REMOVE_FROM_CART,payload:{cartItems:cartItems}});localStorage.setItem(\"cartItems\",JSON.stringify(cartItems));};};","map":{"version":3,"sources":["/Users/shunta/Desktop/portfolio/react-shopping-cart/src/actions/cartActions.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","addToCart","product","dispatch","getState","cartItems","cart","slice","alreadyExists","forEach","x","_id","count","push","type","payload","localStorage","setItem","JSON","stringify","removeFromCart","filter"],"mappings":"yKAAA,OAASA,WAAT,CAAsBC,gBAAtB,KAA8C,UAA9C,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,OAAD,QAAa,UAACC,QAAD,CAAWC,QAAX,CAAwB,CAC5D,GAAMC,CAAAA,SAAS,CAAGD,QAAQ,GAAGE,IAAX,CAAgBD,SAAhB,CAA0BE,KAA1B,EAAlB,CACA,GAAIC,CAAAA,aAAa,CAAG,KAApB,CACAH,SAAS,CAACI,OAAV,CAAkB,SAACC,CAAD,CAAO,CACvB,GAAIA,CAAC,CAACC,GAAF,GAAUT,OAAO,CAACS,GAAtB,CAA2B,CACzBH,aAAa,CAAG,IAAhB,CACAE,CAAC,CAACE,KAAF,GACD,CACF,CALD,EAMA,GAAI,CAACJ,aAAL,CAAoB,CAClBH,SAAS,CAACQ,IAAV,gCAAoBX,OAApB,MAA6BU,KAAK,CAAE,CAApC,IACD,CACDT,QAAQ,CAAC,CACPW,IAAI,CAAEf,WADC,CAEPgB,OAAO,CAAE,CAAEV,SAAS,CAATA,SAAF,CAFF,CAAD,CAAR,CAIAW,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkCC,IAAI,CAACC,SAAL,CAAed,SAAf,CAAlC,EACD,CAjBwB,EAAlB,CAmBP,MAAO,IAAMe,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAClB,OAAD,QAAa,UAACC,QAAD,CAAWC,QAAX,CAAwB,CACjE,GAAMC,CAAAA,SAAS,CAAGD,QAAQ,GACvBE,IADe,CACVD,SADU,CACAE,KADA,GAEfc,MAFe,CAER,SAACX,CAAD,QAAOA,CAAAA,CAAC,CAACC,GAAF,GAAUT,OAAO,CAACS,GAAzB,EAFQ,CAAlB,CAGAR,QAAQ,CAAC,CAAEW,IAAI,CAAEd,gBAAR,CAA0Be,OAAO,CAAE,CAAEV,SAAS,CAATA,SAAF,CAAnC,CAAD,CAAR,CACAW,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkCC,IAAI,CAACC,SAAL,CAAed,SAAf,CAAlC,EACD,CAN6B,EAAvB","sourcesContent":["import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\n\nexport const addToCart = (product) => (dispatch, getState) => {\n  const cartItems = getState().cart.cartItems.slice();\n  let alreadyExists = false;\n  cartItems.forEach((x) => {\n    if (x._id === product._id) {\n      alreadyExists = true;\n      x.count++;\n    }\n  });\n  if (!alreadyExists) {\n    cartItems.push({ ...product, count: 1 });\n  }\n  dispatch({\n    type: ADD_TO_CART,\n    payload: { cartItems },\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n};\n\nexport const removeFromCart = (product) => (dispatch, getState) => {\n  const cartItems = getState()\n    .cart.cartItems.slice()\n    .filter((x) => x._id !== product._id);\n  dispatch({ type: REMOVE_FROM_CART, payload: { cartItems } });\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n};\n"]},"metadata":{},"sourceType":"module"}